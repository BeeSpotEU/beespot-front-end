{"version":3,"sources":["img/BeeSpotLogo.svg","serviceWorker.js","Header.js","PaymentForm.js","Menu.js","MapContainer.js","App.js","Landing.js","Router.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Header","react_default","a","createElement","className","src","this","props","logo","Component","PaymentForm","onToken","token","console","log","main_default","stripeKey","name","description","image","amount","currency","React","Menu","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","zoom","_this2","href","value","dataType","onChange","e","setDataType","target","src_PaymentForm","Map","ReactMapboxGl","accessToken","MapContainer","startAnimation","map","animateMarker","timestamp","setPaintProperty","fillColorByTime","requestAnimationFrame","time","property","Math","round","stops","style","json","center","containerStyle","height","width","onClick","App","state","setZoomLevel","setState","src_Header","src_Menu","src_MapContainer","Landing","Link","to","Landing_Map","AppRouter","BrowserRouter","Route","path","exact","component","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kpuBCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,mICLSC,0LATX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,KAAKC,MAAMC,OACrBP,EAAAC,EAAAC,cAAA,gCALaM,+BC2BNC,6MApBbC,QAAU,SAACC,GACTC,QAAQC,IAAI,cAAeF,4EAI3B,OACEX,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACEU,MAAON,KAAKK,QACZK,UAZW,mCAaXC,KAAK,UACLC,YAAY,yBACZC,MAAOX,IACPY,OAAQ,KACRC,SAAS,eAdSC,IAAMb,WCwBjBc,cA3Bb,SAAAA,EAAYhB,GACZ,IAAAiB,EAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAiB,GACEC,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAvB,KAAMC,IACKA,EAAMuB,KAFnB,OAAAN,wEAIS,IAAAO,EAAAzB,KACP,OACEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG6B,KAAK,KAAR,aACJ/B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG6B,KAAK,KAAR,iBACJ/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,QAEEH,EAAAC,EAAAC,cAAA,UAAQc,KAAK,YAAYgB,MAAO3B,KAAKC,MAAM2B,SAAUC,SAAU,SAACC,GAAD,OAAOL,EAAKxB,MAAM8B,YAAYD,EAAEE,OAAOL,SACpGhC,EAAAC,EAAAC,cAAA,UAAQ8B,MAAM,UAAd,UACAhC,EAAAC,EAAAC,cAAA,UAAQ8B,MAAM,UAAd,YAGJhC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAACoC,EAAD,gBApBO9B,qCCCb+B,EAAMC,YAAc,CACxBC,YAAa,KAqCAC,cAjCb,SAAAA,EAAYpC,GAAM,IAAAiB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAqC,IAChBnB,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAkB,GAAAd,KAAAvB,KAAMC,KAURqC,eAAiB,SAACC,IACI,SAAhBC,EAAiBC,GACnBF,EAAIG,iBAAiB,aAAc,aAAcxB,EAAKyB,gBAAgBF,EAAY,MAClFF,EAAIG,iBAAiB,cAAe,aAAcxB,EAAKyB,gBAAgBF,EAAY,MACnFG,sBAAsBJ,GAExBA,CAAc,IAfdtB,EAAK2B,KAAO,EAFI3B,+EAIF2B,GAEZ,MAAO,CACPC,UAFuC,WAAxB9C,KAAKC,MAAM2B,SAAwB,IAAM,MAEjCmB,KAAKC,MAAMH,GAAQ,GAAM,GAChDI,MAAS,CAAC,CAAC,EAAG,QAAS,CAAC,GAAM,2CAYhC,OACEtD,EAAAC,EAAAC,cAACqC,EAAD,CAAKgB,MAAOC,EACZC,OAAQ,CAAC,EAAE,IACX5B,KAAM,CAACxB,KAAKC,MAAMuB,MAClB6B,eAAgB,CAChBC,OAAQ,QACRC,MAAO,SACPC,QAASxD,KAAKsC,wBA5BOnC,aCyBZsD,6MA1BbC,MAAQ,CACJlC,KAAM,EACNI,SAAU,YAEd+B,aAAe,SAACnC,GAAUN,EAAK0C,SAAS,CAACpC,YACzCO,YAAc,SAACH,GAAcV,EAAK0C,SAAS,CAAChC,sFAG1C,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACgE,EAAD,CAAQ3D,KAAMA,MACdP,EAAAC,EAAAC,cAACiE,EAAD,CACItC,KAAMxB,KAAK0D,MAAMlC,KACjBI,SAAU5B,KAAK0D,MAAM9B,SACrB+B,aAAc3D,KAAK2D,aACnB5B,YAAa/B,KAAK+B,cAEtBpC,EAAAC,EAAAC,cAACkE,EAAD,CACIvC,KAAMxB,KAAK0D,MAAMlC,KACjBI,SAAU5B,KAAK0D,MAAM9B,mBApBfzB,6BCGZ+B,EAAMC,YAAc,CACxBC,YAAa,KAgCA4B,mLA1BX,OACErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAACgE,EAAD,CAAQ3D,KAAMA,MACZP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAMC,GAAG,QAAT,kBAEFvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsE,EAAD,CAAKjB,MAAOC,EACVC,OAAQ,CAAC,EAAE,IACX5B,KAAM,CAAC,IACP6B,eAAgB,CAChBC,OAAQ,OACRC,MAAO,YAGV5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBArBUM,aCCPiE,EAVG,kBAChBzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,KACE1E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWT,IACjCrE,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,KAAK,OAAOE,UAAWhB,OCHpCiB,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAAeC,SAASC,eAAe,SR2HjD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6197ab6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BeeSpotLogo.a39b924e.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"App-header\">\n        <img src={this.props.logo}></img>\n        <span>Bee Spot</span>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport StripeCheckout from 'react-stripe-checkout';\nimport logo from './img/BeeSpotLogo.svg';\n\n\nconst STRIPE_KEY = \"pk_test_2ebgBxWoxXDOGr0M5uOuyCVe\";\n\n\nclass PaymentForm extends React.Component {\n  onToken = (token) => {\n    console.log(\"Got token: \", token);\n  };\n\n  render() {\n    return (\n      <StripeCheckout\n        token={this.onToken}\n        stripeKey={STRIPE_KEY}\n        name=\"BeeSpot\"\n        description=\"Locations data payment\"\n        image={logo}\n        amount={7500}\n        currency=\"EUR\"\n      />\n    )\n  }\n}\n\n\nexport default PaymentForm;\n","import React, { Component } from 'react';\nimport PaymentForm from './PaymentForm';\n\n\nclass Menu extends Component {\n  constructor(props)\n  {\n    super(props);\n    var zoom = props.zoom * 10;\n  }\n  render() {\n    return (\n      <div className=\"App-menu\">\n        <ul>\n          <li><a href=\"#\">Location</a></li>\n          <li><a href=\"#\">How it works</a></li>\n          <li className=\"menu-item\">\n            Show:\n            <select name=\"data_type\" value={this.props.dataType} onChange={(e) => this.props.setDataType(e.target.value)}>\n              <option value=\"pollen\">Pollen</option>\n              <option value=\"nectar\">Nectar</option>\n            </select>\n          </li>\n          <li className=\"menu-item\">\n            <PaymentForm/>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport 'mapbox-gl/src/css/mapbox-gl.css' ;\nimport json from './style.json';\n\nconst Map = ReactMapboxGl({\n  accessToken: \"\"\n});\n\nclass MapContainer extends Component {\n  constructor(props){\n    super(props);\n    this.time = 0;\n  }\n  fillColorByTime(time) {\n      const prefix = this.props.dataType === 'pollen' ? 'p' : 'n';\n      return {\n      \"property\": prefix + ((Math.round(time) % 12) + 1) ,\n      \"stops\": [[0, \"#fff\"], [50.0, \"#0f0\"]]\n    }; \n  }\n  startAnimation = (map) => {\n    let animateMarker = (timestamp) => {\n      map.setPaintProperty('zones-line', 'fill-color', this.fillColorByTime(timestamp / 1000));\n      map.setPaintProperty('zones-line2', 'fill-color', this.fillColorByTime(timestamp / 1000));\n      requestAnimationFrame(animateMarker);\n    }\n    animateMarker(0);\n  }\n  render() {\n    return (\n      <Map style={json} \n      center={[5,52]}\n      zoom={[this.props.zoom]}\n      containerStyle={{\n      height: \"100vh\",\n      width: \"100vw\"}}\n      onClick={this.startAnimation}\n      ></Map>\n    );\n  }\n}\n\nexport default MapContainer;\n","import React, { Component } from 'react';\nimport logo from './img/BeeSpotLogo.svg';\nimport './App.css';\nimport Header from './Header';\nimport Menu from './Menu';\nimport MapContainer from './MapContainer';\n\nclass App extends Component {\n  state = {\n      zoom: 9,\n      dataType: 'nectar',\n  };\n  setZoomLevel = (zoom) => {this.setState({zoom})};\n  setDataType = (dataType) => {this.setState({dataType})};\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header logo={logo}></Header>\n        <Menu\n            zoom={this.state.zoom}\n            dataType={this.state.dataType}\n            setZoomLevel={this.setZoomLevel}\n            setDataType={this.setDataType}\n        />\n        <MapContainer\n            zoom={this.state.zoom}\n            dataType={this.state.dataType}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport logo from './img/BeeSpotLogo.svg';\nimport './App.css';\nimport Header from './Header';\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport 'mapbox-gl/src/css/mapbox-gl.css' ;\nimport json from './style-landing.json';\n\n\nconst Map = ReactMapboxGl({\n  accessToken: \"\"\n});\n\nclass Landing extends Component {\n\n  render() {\n    return (\n      <div className=\"App-landing\">\n      <Header logo={logo}></Header>\n        <div className=\"hero\">\n          <h1>Make more healthy bees</h1>\n          <Link to=\"/app\">Show me where</Link>\n        </div>\n        <div className=\"map\">\n          <Map style={json} \n            center={[5,52]}\n            zoom={[10]}\n            containerStyle={{\n            height: \"90vh\",\n            width: \"100vw\"}}\n            ></Map>\n         </div>\n         <div className=\"exp\">\n          <ul>\n            <li></li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport App from \"./App\";\nimport Landing from \"./Landing\";\n\nconst AppRouter = () => (\n  <Router>\n    <div>\n      <Route path=\"/\" exact component={Landing} />\n      <Route path=\"/app\" component={App} />\n\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport AppRouter from \"./Router\";\n\nReactDOM.render(<AppRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}